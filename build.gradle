ext {
    targetSdkVersion = 29
    kotlinVersion = '1.3.72'
}

ext.deps = [
        appCompat: 'androidx.appcompat:appcompat:1.1.0',
        dagger: 'com.google.dagger:dagger:2.28',
        daggerCompiler: 'com.google.dagger:dagger-compiler:2.28',
        kotlinRuntime: "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",

        junit: 'junit:junit:4.13',
        fest: 'org.easytesting:fest-assert-core:2.0M10',
        mockitoCore: 'org.mockito:mockito-core:2.28.2',
        androidTestRunner: 'androidx.test:runner:1.2.0',
        androidTestRules: 'androidx.test:rules:1.2.0',
        androidTestJunitRunner: 'androidx.test.ext:junit:1.1.1',
        espressoCore: 'androidx.test.espresso:espresso-core:3.2.0',
        androidTestJunit: 'androidx.test.ext:junit:1.1.1',
]

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.28.1"
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    buildscript {
        repositories {
            jcenter()
        }
        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
            classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
            classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
        }
    }

    configureSpotless(it)
    configureAndroidPlugin(it)
}

static def configureSpotless(Project project) {
    project.apply plugin: 'com.diffplug.gradle.spotless'

    project.spotless {
        format 'misc', {
            target '**/*.gradle', '**/*.md', '**/.gitignore'

            trimTrailingWhitespace()
            indentWithSpaces()
            endWithNewline()
        }
    }

    def closure = {
        project.spotless {
            kotlin {
                target '**/*.kt'
                ktlint('0.37.0').userData([
                        'max_line_length': '120',
                        'indent_size': '4',
                        'continuation_indent_size': '4',
                        'insert_final_newline': 'true',
                        'end_of_line': 'crlf',
                ])
            }
        }
    }
    project.plugins.withId('kotlin-android', closure)
    project.plugins.withId('kotlin', closure)
}

static def configureAndroidPlugin(Project project) {
    def closure = {
        project.android {
            compileSdkVersion 29

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }

            defaultConfig {
                minSdkVersion 15
                testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
                testApplicationId 'com.jaynewstrom.concretesample.androidTest'
            }
        }
    }

    project.plugins.withId('com.android.application', closure)
    project.plugins.withId('com.android.library', closure)
}
